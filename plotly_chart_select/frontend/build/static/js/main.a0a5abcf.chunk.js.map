{"version":3,"sources":["plotly_chart_select.tsx","index.tsx"],"names":["PlotlyChartSelect","render","fig","JSON","parse","props","args","className","style","position","height","layout","width","data","config","frames","onClick","onSelect","onSelected","eventData","selectedPoints","points","forEach","arrayItem","push","index","pointIndex","x","y","Streamlit","setComponentValue","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"2QAYMA,E,4MAEGC,OAAS,WAEd,IAAMC,EAAMC,KAAKC,MAAM,EAAKC,MAAMC,KAAX,KAEvB,OACE,kBAAC,IAAD,CACEC,UAAU,gBACVC,MAAO,CAACC,SAAU,WAAYC,OAAQR,EAAIS,OAAOD,OAAQE,MAAOV,EAAIS,OAAOC,OAC3EC,KAAMX,EAAIW,KACVF,OAAQT,EAAIS,OAEZG,OAAQ,CACN,aAAe,EACf,uBAA0B,CAAC,UAAW,SAAU,UAAW,wBAAyB,wBAAyB,qBAG/GC,OAAQb,EAAIa,OACZC,QAAS,EAAKC,SACdC,WAAY,EAAKD,Y,EAKfA,SAAW,SAACE,GAClB,IAAIC,EAA6B,GACjCD,EAAUE,OAAOC,SAAQ,SAAUC,GACjCH,EAAeI,KAAK,CAClBC,MAAOF,EAAUG,WACjBC,EAAGJ,EAAUI,EACbC,EAAGL,EAAUK,OAIjBC,IAAUC,kBAAkBV,I,YAnCAW,KA4CjBC,cAAwBhC,GCpDvCiC,IAAShC,OACP,kBAAC,IAAMiC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a0a5abcf.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport Plot from \"react-plotly.js\";\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass PlotlyChartSelect extends StreamlitComponentBase {\n  \n  public render = (): ReactNode => {\n\n    const fig = JSON.parse(this.props.args[\"fig\"]);\n\n    return (\n      <Plot\n        className=\"stPlotlyChart\"\n        style={{position: 'relative', height: fig.layout.height, width: fig.layout.width}} \n        data={fig.data}\n        layout={fig.layout}\n        // config={fig.config}\n        config={{\n          'displaylogo': false,\n          'modeBarButtonsToRemove': ['toImage', 'zoom2d', 'lasso2d', 'hoverClosestCartesian', 'hoverCompareCartesian', 'toggleSpikelines']\n          }}\n  \n        frames={fig.frames}\n        onClick={this.onSelect}\n        onSelected={this.onSelect}\n      />\n    )\n  }\n\n  private onSelect = (eventData: any): void => {\n    var selectedPoints: Array<any> = [];\n    eventData.points.forEach(function (arrayItem: any) {\n      selectedPoints.push({\n        index: arrayItem.pointIndex,\n        x: arrayItem.x,\n        y: arrayItem.y,\n      })\n    });\n\n    Streamlit.setComponentValue(selectedPoints)\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(PlotlyChartSelect)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport PlotlyChartSelect from \"./plotly_chart_select\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <PlotlyChartSelect />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}